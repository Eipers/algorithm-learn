* 前序遍历
> 当前节点 -> 左子树 -> 右子树
* 中序遍历
> 左子树 -> 当前节点 -> 右子树
* 后序遍历
> 左子树 -> 右子树 -> 当前节点

* * *
树的直径: 树上最远的两个节点之间的距离, 连接这两点的路径被称为[树的最长链]
> {@link Solution310}
> 存在定义: 树中[所有最短路径距离]的最大值即为树的直径
> 求值方法:
   1. 两次BFS或DFS: 先从任意一点P出发，找离它最远的点Q，再从点Q出发，找离它最远的点W，W到Q的距离就是是的直径
   2. 树形DP: 先通过递归的方式到叶子底部,然后通过自底向上的方式进行更新距离,找到最长路径  //todo 有时间去理解它